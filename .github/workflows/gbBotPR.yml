on:
  pull_request_target:
    types: 
      [opened, synchronize, reopened, edited, review_requested, labeled]
    paths:    
      - 'sourceData/**'
jobs:
  geoBoundaryZipfileChecks:
    runs-on: ubuntu-latest
    container: osgeo/gdal:ubuntu-small-latest
    steps:
    - name: Initialize Linux Environment
      run: |
           apt-get update
           apt-get install -y software-properties-common
           add-apt-repository ppa:git-core/ppa
           apt-get update
           apt-get install -y git
           curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
           apt-get install git-lfs
    
    - name: Download Repository Code
      uses: actions/checkout@v2.3.2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Post-Download Initialization Steps
      run: |
           git clone https://github.com/wmgeolab/geoBoundaryBot
     
    - id: changes
      name: Detect Proposed Changes
      uses: wmgeolab/get-changed-files@master
      with:
        format: 'json'
      
      
    - name: Check for valid files in submission
      id: checks
      run: |
           export changes=${{ steps.changes.outputs.added_modified }}
           export gitsha=${{ github.event.pull_request.head.sha }}
           echo ${{ github.event.pull_request.head.sha }}
           echo ${GITHUB_WORKSPACE}
           ls
           echo "==============================================="
           mkdir ~/tmp
           python geoBoundaryBot/gbZipCheck.py
      
    - name: Build Artifacts
      uses: actions/upload-artifact@v2
      with:
          name: zipLogs
          path: ~/tmp/
    
    - name: checkFail
      if: $PASS != "PASSED"
      run: |
           echo $PASS
           exit 1
  
  geoBoundaryMetaDataCheck:
      runs-on: ubuntu-latest
      container: osgeo/gdal:ubuntu-small-latest
      steps:
      - name: Initialize Linux Environment
        run: |
             apt-get update
             apt-get install -y software-properties-common
             add-apt-repository ppa:git-core/ppa
             apt-get update
             apt-get install -y git
             curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
             apt-get install git-lfs
      
      - name: Download Repository Code
        uses: actions/checkout@v2.3.2
        with:
         ref: ${{ github.event.pull_request.head.sha }}
  
      - name: Post-Download Initialization Steps
        run: git clone https://github.com/wmgeolab/geoBoundaryBot
  
      - id: changes
        name: Detect Proposed Changes
        uses: wmgeolab/get-changed-files@master
        with:
          format: 'json'
        
        
      - name: Check for valid metadata in submission files
        run: |
             export changes=${{ steps.changes.outputs.added_modified }}
             export gitsha=${{ github.event.pull_request.head.sha }}
             echo ${{ github.event.pull_request.head.sha }}
             echo ${GITHUB_WORKSPACE}
             ls
             echo "==============================================="
             mkdir ~/tmp
             python geoBoundaryBot/gbMetaCheck.py
     
      - name: Build Artifacts 
        uses: actions/upload-artifact@v2
        with:
          name: metaLogs
          path: ~/tmp/
    
  geoBoundaryDataCheck:
      runs-on: ubuntu-latest
      container: osgeo/gdal:ubuntu-small-latest
      steps:
      - name: Initialize Linux Environment
        run: |
              apt-get update
              apt-get install -y software-properties-common
              add-apt-repository ppa:git-core/ppa
              apt-get update
              apt-get install -y git
              curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
              apt-get install -y git-lfs
              apt-get install -y python3-pip
              pip3 install geopandas
      
      - name: Download Repository Code
        uses: actions/checkout@v2.3.2
        with:
         ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Post-Download Initialization Steps
        run: git clone https://github.com/wmgeolab/geoBoundaryBot
  
      - id: changes
        name: Detect Proposed Changes
        uses: wmgeolab/get-changed-files@master
        with:
          format: 'json'
        
        
      - name: Check for valid data in submission files
        run: |
             export changes=${{ steps.changes.outputs.added_modified }}
             export gitsha=${{ github.event.pull_request.head.sha }}
             echo ${{ github.event.pull_request.head.sha }}
             echo ${GITHUB_WORKSPACE}
             ls
             echo "==============================================="
             mkdir ~/tmp
             python geoBoundaryBot/gbDataCheck.py
              
      - name: Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dataLogs
          path: ~/tmp/
          
  prResponse:
      runs-on: ubuntu-latest
      container: osgeo/gdal:ubuntu-small-latest
      steps:
      - name: Initialize Linux Environment
        run: |
             echo "==="
